<!-- Featured Products Grid Section -->
<div class="featured-products-grid">
  <div class="grid">
    {% for block in section.blocks %}
      {% assign product = all_products[block.settings.product] %}
      {% if product %}
        <div class="grid-item">
          <a
            href="javascript:void(0);"
            class="product-link {{ product.handle }}"
            data-handle="{{ product.handle }}"
            data-id="{{ product.id }}"
          >
            <span class="plus-icon">
              <img src="{{ 'plus-icon.svg' | asset_url }}" height="22px" width="22px">
            </span>
            <img src="{{ product | image_url: width: 500 }}" alt="{{ product.title }}">
          </a>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</div>

<!-- Product Popup Modal -->
<div id="product-modal" class="product-modal">
  <div class="modal-content">
    <span class="close-button">&times;</span>
    <div class="modal-body"></div>
  </div>
</div>

<!-- Section Settings Schema -->
{% schema %}
{
  "name": "Featured Products Grid",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select Product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Featured Products Grid",
      "category": "Products"
    }
  ]
}
{% endschema %}

<!-- Styles for the Featured Products Grid -->
<style>
  .featured-products-grid {
    padding: 10px 50px;
    margin-top: 90px;
  }
  .featured-products-grid .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
  }
  .featured-products-grid .product-link {
    width: 100%;
    height: 100%;
    display: block;
    aspect-ratio: 1/1;
  }
  .featured-products-grid .grid-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .product-link {
    position: relative;
    cursor: initial;
  }
  .plus-icon img {
    max-width: 10px;
    max-height: 10px;
  }
  .plus-icon {
    display: block;
    background: #f8f8f8;
    position: absolute;
    top: 0;
    left: 0;
    width: 22px;
    height: 22px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    cursor: pointer;
  }
  .black-leather-bag .plus-icon {
    top: 54%;
    left: 60%;
  }
  .classic-leather-jacket .plus-icon {
    top: 16%;
    left: 70%;
  }
  .blue-silk-tuxedo .plus-icon {
    top: 50%;
    left: 83%;
  }
  .classic-varsity-top .plus-icon {
    top: 25%;
    left: 50%;
  }
  .chequered-red-shirt .plus-icon {
    top: 19%;
    left: 60%;
  }
  .dark-denim-top .plus-icon {
    top: 38%;
    left: 75%;
  }
  #product-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    justify-content: center;
    align-items: center;
  }
  .modal-content {
    background: #fff;
    max-width: 311px;
    position: relative;
    padding: 25px 20px;
  }
  .modal-content img {
    width: 120px;
    height: 140px;
    object-fit: cover;
    margin-right: 8px;
  }
  #modal-product-info {
    display: flex;
    margin-top: 15px;
  }
  .close-button {
    position: absolute;
    top: 0px;
    right: 10px;
    text-align: right;
    cursor: pointer;
    color: #000;
    font-size: 20px;
  }
</style>

<!-- Scripts for the Featured Products Grid -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    let modal = document.getElementById('product-modal');
    let modalBody = modal.querySelector('.modal-body');
    let closeButton = modal.querySelector('.close-button');
    let productLinks = document.querySelectorAll('.featured-products-grid .plus-icon');

    productLinks.forEach(function (link) {
      link.addEventListener('click', function (event) {
        event.preventDefault();
        var handle = this.parentElement.getAttribute('data-handle');

        fetch('/products/' + handle + '.js')
          .then(function (response) {
            return response.json();
          })
          .then(function (data) {
            showPopUp(data);
          });
      });
    });

    function showPopUp(data) {
      let modalContent = document.createElement('div');
      modalContent.id = 'modal-product-info';

      let lhs = document.createElement('div');
      lhs.classList.add('lhs');

      let rhs = document.createElement('div');
      rhs.classList.add('rhs');

      let productPic = document.createElement('div');
      productPic.id = 'product-pic';
      let productImg = document.createElement('img');

      let productTitle = document.createElement('div');
      productTitle.id = 'product-title';

      let productPrice = document.createElement('div');
      productPrice.id = 'product-price';

      let productDescription = document.createElement('div');
      productDescription.id = 'product-description';

      let colorVariations = document.createElement('div');
      colorVariations.classList.add('color-variations');

      productPic.appendChild(productImg);
      lhs.appendChild(productPic);

      rhs.appendChild(productTitle);
      rhs.appendChild(productPrice);
      rhs.appendChild(productDescription);

      modalContent.appendChild(lhs);
      modalContent.appendChild(rhs);
      modalBody.appendChild(modalContent);
      modalBody.appendChild(colorVariations);

      productImg.src = data.featured_image;
      productTitle.innerHTML = data.title;
      productPrice.innerHTML = data.price;
      productDescription.innerHTML = data.description;

      let productVariations = data.options;

      let colorsData = getColors(productVariations);
      let sizesData = getSizes(productVariations)

      addColorInputs(colorsData, colorVariations);

      modal.style.display = 'flex';
      console.log(data);
    }

    function getColors(variations) {
      for(let i=0; i<variations.length; i++) {
        if(variations[i].name.toLowerCase() === 'color') {
          console.log("colors data", variations[i]);
          return variations[i];
        }
      }
    }

    function addColorInputs(colors, div) {
      for(let color of colors.values) {
        let colorDiv = documentcreateElement("div");
        colorVariantDiv.classList.add("color-variant");
        let colorInput = document.createElement("input");
        let colorName = color.toLowerCase();
        colorInput.type = "radio";
        colorInput.name = "product-color";
        colorInput.value = colorName;
        colorInput.classList.add(`color-${colorName}`);
        colorInput.id = "var-" +colorName;
        colorDiv.appendChild(colorInput);

        let colorLabel = document.createElement("label");
        colorLabel.htmlFor = "var-" + colorName; // Associate label with input via 'for' attribute
        colorLabel.classList.add('color-label');
        colorLabel.classList.add(`color-${colorName}`); // Add a class for styling
        colorLabel.innerText = colorName;
        colorDiv.appendChild(colorLabel);
        div.appendChild(colorDiv);


        console.log(colorInput);
      }
    }

    function getSizes(variations) {
      for(let i=0; i<variations.length; i++) {
        if(variations[i].name.toLowerCase() === 'size') {
          console.log("sizes data", variations[i]);
          return variations[i];
        }
      }
    }

    closeButton.addEventListener('click', function () {
      modal.style.display = 'none';
      modalBody.innerHTML = '';
    });

    window.addEventListener('click', function (event) {
      if (event.target == modal) {
        modal.style.display = 'none';
        modalBody.innerHTML = '';
      }
    });
  });
</script>
